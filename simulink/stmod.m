function [ret,x0,str,ts,xts]=stmod(t,x,u,flag)
%STMOD	is the M-file description of the SIMULINK system named STMOD.
%	The block-diagram can be displayed by typing: STMOD.
%
%	SYS=STMOD(T,X,U,FLAG) returns depending on FLAG certain
%	system values given time point, T, current state vector, X,
%	and input vector, U.
%	FLAG is used to indicate the type of output to be returned in SYS.
%
%	Setting FLAG=1 causes STMOD to return state derivatives, FLAG=2
%	discrete states, FLAG=3 system outputs and FLAG=4 next sample
%	time. For more information and other options see SFUNC.
%
%	Calling STMOD with a FLAG of zero:
%	[SIZES]=STMOD([],[],[],0),  returns a vector, SIZES, which
%	contains the sizes of the state vector and other parameters.
%		SIZES(1) number of states
%		SIZES(2) number of discrete states
%		SIZES(3) number of outputs
%		SIZES(4) number of inputs
%		SIZES(5) number of roots (currently unsupported)
%		SIZES(6) direct feedthrough flag
%		SIZES(7) number of sample times
%
%	For the definition of other parameters in SIZES, see SFUNC.
%	See also, TRIM, LINMOD, LINSIM, EULER, RK23, RK45, ADAMS, GEAR.

% Note: This M-file is only used for saving graphical information;
%       after the model is loaded into memory an internal model
%       representation is used.

% the system will take on the name of this mfile:
sys = [mfilename,'_mdl_'];
new_system(sys)
% simver(1.3)
if (0 == (nargin + nargout))
     set_param(sys,'Location',[140,163,690,558])
     open_system(sys)
end;
set_param(sys,'Solver',        'ode1')
set_param(sys,'StartTime',     '0.0')
set_param(sys,'StopTime',      '300')
set_param(sys,'MinStep',       '0.005')
set_param(sys,'MaxStep',       '0.1')
set_param(sys,'RelTol',        '1e-3')
set_param(sys,'TimeSaveName',  't')
set_param(sys,'StateSaveName', 'x')
set_param(sys,'OutputSaveName','y')
set_param(sys,'SaveTime',      'off')
set_param(sys,'SaveState',     'off')
set_param(sys,'SaveOutput',    'off')


add_block('simulink/Sources/Step',[sys,'/','Step Input'])
set_param([sys,'/','Step Input'],...
		'Time','0',...
		'position',[20,225,40,245])

add_block('simulink/Continuous/State-Space',[sys,'/',['Matrix',13,'Gain10']])
set_param([sys,'/',['Matrix',13,'Gain10']],...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'MaskDisplay','disp(''K'')',...
		'MaskType','Matrix Gain',...
		'MaskPromptString','Gain matrix:',...
		'MaskVariables','K = @1;')
set_param([sys,'/',['Matrix',13,'Gain10']],...
		'MaskHelp','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'MaskValueString','Lr',...
		'position',[85,220,115,250])

add_block('simulink/Sinks/To Workspace',[sys,'/','To Workspace9'])
set_param([sys,'/','To Workspace9'],...
		'orientation',3,...
		'VariableName','u',...
		'buffer','1000000',...
		'position',[15,20,65,40])

add_block('simulink/Continuous/State-Space',[sys,'/','State-Space'])
set_param([sys,'/','State-Space'],...
		'A','A',...
		'B','B',...
		'C','eye(n)',...
		'D','zeros(n,m)',...
		'X0','x0',...
		'position',[140,59,215,101])

add_block('simulink/Continuous/State-Space',[sys,'/',['Matrix',13,'Gain14']])
set_param([sys,'/',['Matrix',13,'Gain14']],...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'MaskDisplay','disp(''K'')',...
		'MaskType','Matrix Gain',...
		'MaskPromptString','Gain matrix:',...
		'MaskVariables','K = @1;')
set_param([sys,'/',['Matrix',13,'Gain14']],...
		'MaskHelp','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'MaskValueString','C',...
		'position',[390,85,420,115])

add_block('simulink/Sinks/To Workspace',[sys,'/','To Workspace8'])
set_param([sys,'/','To Workspace8'],...
		'VariableName','x',...
		'buffer','1000000',...
		'position',[295,35,345,55])

add_block('simulink/Sinks/To Workspace',[sys,'/','To Workspace10'])
set_param([sys,'/','To Workspace10'],...
		'VariableName','y',...
		'buffer','1000000',...
		'position',[460,90,510,110])

add_block('built-in/Clock',[sys,'/','Clock'])
set_param([sys,'/','Clock'],...
		'MaskDisplay','',...
		'position',[380,220,400,240])

add_block('simulink/Sinks/To Workspace',[sys,'/','To Workspace1'])
set_param([sys,'/','To Workspace1'],...
		'VariableName','t',...
		'buffer','1000000',...
		'position',[460,222,510,238])

add_block('simulink/Continuous/State-Space',[sys,'/','State-Space1'])
set_param([sys,'/','State-Space1'],...
		'A','Am',...
		'B','Bm',...
		'C','eye(n)',...
		'D','zeros(n,m)',...
		'X0','xm0',...
		'position',[105,330,185,370])

add_block('simulink/Sinks/To Workspace',[sys,'/','To Workspace2'])
set_param([sys,'/','To Workspace2'],...
		'VariableName','xm',...
		'buffer','1000000',...
		'position',[290,357,340,373])

add_block('built-in/Sum',[sys,'/','Sum6'])
set_param([sys,'/','Sum6'],...
		'orientation',3,...
		'inputs','-+',...
		'position',[221,315,254,330])

add_block('simulink/Continuous/State-Space',[sys,'/',['Matrix',13,'Gain11']])
set_param([sys,'/',['Matrix',13,'Gain11']],...
		'orientation',3,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'MaskDisplay','disp(''K'')',...
		'MaskType','Matrix Gain',...
		'MaskPromptString','Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain11']],...
		'MaskVariables','K = @1;',...
		'MaskHelp','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'MaskValueString','S',...
		'position',[185,255,215,280])

add_block('built-in/Sum',[sys,'/','Sum5'])
set_param([sys,'/','Sum5'],...
		'orientation',2,...
		'inputs','++++',...
		'position',[80,109,100,191])

add_block('simulink/Continuous/State-Space',[sys,'/',['Matrix',13,'Gain13']])
set_param([sys,'/',['Matrix',13,'Gain13']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'MaskDisplay','disp(''K'')',...
		'MaskType','Matrix Gain',...
		'MaskPromptString','Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain13']],...
		'MaskVariables','K = @1;',...
		'MaskHelp','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'MaskValueString','L',...
		'position',[290,105,320,135])

add_block('simulink/Continuous/State-Space',[sys,'/',['Matrix',13,'Gain9']])
set_param([sys,'/',['Matrix',13,'Gain9']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'MaskDisplay','disp(''K'')',...
		'MaskType','Matrix Gain',...
		'MaskPromptString','Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain9']],...
		'MaskVariables','K = @1;',...
		'MaskHelp','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'MaskValueString','-rho*eye(m)',...
		'position',[140,145,170,175])

add_block('simulink/User-Defined Functions/Fcn',[sys,'/','Unv1'])
set_param([sys,'/','Unv1'],...
		'orientation',3,...
		'Expr','u/(norm(u)+delta)',...
		'MaskDisplay','disp(''UnV'')',...
		'MaskType','unit vector',...
		'MaskPromptString','delta',...
		'MaskVariables','delta=@1;')
set_param([sys,'/','Unv1'],...
		'MaskValueString','0.05',...
		'position',[181,175,219,200])

add_block('simulink/Continuous/State-Space',[sys,'/',['Matrix',13,'Gain15']])
set_param([sys,'/',['Matrix',13,'Gain15']],...
		'orientation',3,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'MaskDisplay','disp(''K'')',...
		'MaskType','Matrix Gain',...
		'MaskPromptString','Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain15']],...
		'MaskVariables','K = @1;',...
		'MaskHelp','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'MaskValueString','P',...
		'position',[185,215,215,240])

add_block('simulink/Continuous/State-Space',[sys,'/',['Matrix',13,'Gain12']])
set_param([sys,'/',['Matrix',13,'Gain12']],...
		'orientation',3,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'MaskDisplay','disp(''K'')',...
		'MaskType','Matrix Gain',...
		'MaskPromptString','Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain12']],...
		'MaskVariables','K = @1;',...
		'MaskHelp','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'MaskValueString','Lrc',...
		'position',[260,180,290,210])
add_line(sys,[405,230;455,230])
add_line(sys,[75,150;70,150;70,80;135,80])
add_line(sys,[45,235;80,235])
add_line(sys,[200,170;200,160;175,160])
add_line(sys,[65,235;65,350;100,350])
add_line(sys,[70,110;40,110;40,45])
add_line(sys,[120,235;130,235;130,180;105,180])
add_line(sys,[135,160;105,160])
add_line(sys,[275,175;275,140;105,140])
add_line(sys,[285,120;105,120])
add_line(sys,[220,80;235,80;235,45;290,45])
add_line(sys,[240,310;240,295;200,285])
add_line(sys,[240,295;275,295;275,215])
add_line(sys,[220,80;355,80;355,100;385,100])
add_line(sys,[425,100;455,100])
add_line(sys,[355,100;355,120;325,120])
add_line(sys,[355,120;355,345;245,335])
add_line(sys,[190,350;230,350;230,335])
add_line(sys,[216,350;216,365;285,365])
add_line(sys,[200,210;200,205])
add_line(sys,[200,250;200,245])

drawnow

% Return any arguments.
if (nargin | nargout)
	% Must use feval here to access system in memory
	if (nargin > 3)
		if (flag == 0)
			eval(['[ret,x0,str,ts,xts]=',sys,'(t,x,u,flag);'])
		else
			eval(['ret =', sys,'(t,x,u,flag);'])
		end
	else
		[ret,x0,str,ts,xts] = feval(sys);
	end
else
	drawnow % Flash up the model and execute load callback
end
