function [ret,x0,str,ts,xts]=output(t,x,u,flag);
%OUTPUT	is the M-file description of the SIMULINK system named OUTPUT.
%	The block-diagram can be displayed by typing: OUTPUT.
%
%	SYS=OUTPUT(T,X,U,FLAG) returns depending on FLAG certain
%	system values given time point, T, current state vector, X,
%	and input vector, U.
%	FLAG is used to indicate the type of output to be returned in SYS.
%
%	Setting FLAG=1 causes OUTPUT to return state derivatives, FLAG=2
%	discrete states, FLAG=3 system outputs and FLAG=4 next sample
%	time. For more information and other options see SFUNC.
%
%	Calling OUTPUT with a FLAG of zero:
%	[SIZES]=OUTPUT([],[],[],0),  returns a vector, SIZES, which
%	contains the sizes of the state vector and other parameters.
%		SIZES(1) number of states
%		SIZES(2) number of discrete states
%		SIZES(3) number of outputs
%		SIZES(4) number of inputs
%		SIZES(5) number of roots (currently unsupported)
%		SIZES(6) direct feedthrough flag
%		SIZES(7) number of sample times
%
%	For the definition of other parameters in SIZES, see SFUNC.
%	See also, TRIM, LINMOD, LINSIM, EULER, RK23, RK45, ADAMS, GEAR.

% Note: This M-file is only used for saving graphical information;
%       after the model is loaded into memory an internal model
%       representation is used.

% the system will take on the name of this mfile:
sys = mfilename;
new_system(sys)
simver(1.3)
if (0 == (nargin + nargout))
     set_param(sys,'Location',[286,148,729,418])
     open_system(sys)
end;
set_param(sys,'algorithm',     'Euler')
set_param(sys,'Start time',    '0.0')
set_param(sys,'Stop time',     '10')
set_param(sys,'Min step size', '0.001')
set_param(sys,'Max step size', '0.01')
set_param(sys,'Relative error','1e-3')
set_param(sys,'Return vars',   '[t,x,y]')

add_block('built-in/Clock',[sys,'/','Clock'])
set_param([sys,'/','Clock'],...
		'position',[20,10,40,30])

add_block('built-in/To Workspace',[sys,'/','To Workspace2'])
set_param([sys,'/','To Workspace2'],...
		'mat-name','t',...
		'buffer','1000000',...
		'position',[80,10,130,30])

add_block('built-in/To Workspace',[sys,'/','To Workspace1'])
set_param([sys,'/','To Workspace1'],...
		'mat-name','u',...
		'buffer','1000000',...
		'position',[95,72,145,88])

add_block('built-in/State-Space',[sys,'/','State-Space'])
set_param([sys,'/','State-Space'],...
		'A','A',...
		'B','B',...
		'C','C',...
		'D','zeros(p,m)',...
		'X0','x0',...
		'position',[175,39,250,81])

add_block('built-in/MATLAB Fcn',[sys,'/','Unv'])
set_param([sys,'/','Unv'],...
		'orientation',2,...
		'MATLAB Fcn','u/(norm(u)+delta)',...
		'Mask Display','UnV',...
		'Mask Type','unit vector',...
		'Mask Dialogue','Unit Vector|delta',...
		'Mask Translate','delta=@1;')
set_param([sys,'/','Unv'],...
		'Mask Entries','0.001\/',...
		'position',[230,205,270,235])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain2']])
set_param([sys,'/',['Matrix',13,'Gain2']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain2']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','rho*eye(m)\/',...
		'position',[165,205,195,235])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain1']])
set_param([sys,'/',['Matrix',13,'Gain1']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain1']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','gamma0*eye(m)\/',...
		'position',[200,145,230,175])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain']])
set_param([sys,'/',['Matrix',13,'Gain']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','F\/',...
		'position',[315,145,345,175])

add_block('built-in/To Workspace',[sys,'/','To Workspace3'])
set_param([sys,'/','To Workspace3'],...
		'orientation',2,...
		'mat-name','un',...
		'buffer','1000000',...
		'position',[40,195,90,215])

add_block('built-in/Sum',[sys,'/','Sum1'])
set_param([sys,'/','Sum1'],...
		'orientation',2,...
		'inputs','--',...
		'position',[100,154,120,181])

add_block('built-in/To Workspace',[sys,'/','To Workspace4'])
set_param([sys,'/','To Workspace4'],...
		'orientation',3,...
		'mat-name','ul',...
		'buffer','1000000',...
		'position',[130,115,180,135])

add_block('built-in/To Workspace',[sys,'/','To Workspace'])
set_param([sys,'/','To Workspace'],...
		'orientation',2,...
		'mat-name','y',...
		'buffer','1000000',...
		'position',[310,100,360,120])
add_line(sys,[95,170;70,170;70,60;170,60])
add_line(sys,[45,20;75,20])
add_line(sys,[70,80;90,80])
add_line(sys,[225,220;200,220])
add_line(sys,[160,220;140,220;140,175;125,175])
add_line(sys,[195,160;125,160])
add_line(sys,[310,160;235,160])
add_line(sys,[295,160;295,220;275,220])
add_line(sys,[255,60;400,60;400,160;350,160])
add_line(sys,[400,110;365,110])
add_line(sys,[140,205;95,205])
add_line(sys,[155,160;155,140])

drawnow

% Return any arguments.
if (nargin | nargout)
	% Must use feval here to access system in memory
	if (nargin > 3)
		if (flag == 0)
			eval(['[ret,x0,str,ts,xts]=',sys,'(t,x,u,flag);'])
		else
			eval(['ret =', sys,'(t,x,u,flag);'])
		end
	else
		[ret,x0,str,ts,xts] = feval(sys);
	end
else
	drawnow % Flash up the model and execute load callback
end
