function [ret,x0,str,ts,xts]=outmodc(t,x,u,flag);
%OUTMODC	is the M-file description of the SIMULINK system named OUTMODC.
%	The block-diagram can be displayed by typing: OUTMODC.
%
%	SYS=OUTMODC(T,X,U,FLAG) returns depending on FLAG certain
%	system values given time point, T, current state vector, X,
%	and input vector, U.
%	FLAG is used to indicate the type of output to be returned in SYS.
%
%	Setting FLAG=1 causes OUTMODC to return state derivatives, FLAG=2
%	discrete states, FLAG=3 system outputs and FLAG=4 next sample
%	time. For more information and other options see SFUNC.
%
%	Calling OUTMODC with a FLAG of zero:
%	[SIZES]=OUTMODC([],[],[],0),  returns a vector, SIZES, which
%	contains the sizes of the state vector and other parameters.
%		SIZES(1) number of states
%		SIZES(2) number of discrete states
%		SIZES(3) number of outputs
%		SIZES(4) number of inputs
%		SIZES(5) number of roots (currently unsupported)
%		SIZES(6) direct feedthrough flag
%		SIZES(7) number of sample times
%
%	For the definition of other parameters in SIZES, see SFUNC.
%	See also, TRIM, LINMOD, LINSIM, EULER, RK23, RK45, ADAMS, GEAR.

% Note: This M-file is only used for saving graphical information;
%       after the model is loaded into memory an internal model
%       representation is used.

% the system will take on the name of this mfile:
sys = mfilename;
new_system(sys)
simver(1.3)
if (0 == (nargin + nargout))
     set_param(sys,'Location',[177,307,1089,650])
     open_system(sys)
end;
set_param(sys,'algorithm',     'RK-45')
set_param(sys,'Start time',    '0.0')
set_param(sys,'Stop time',     '140')
set_param(sys,'Min step size', '0.01')
set_param(sys,'Max step size', '0.1')
set_param(sys,'Relative error','1e-3')
set_param(sys,'Return vars',   '')

add_block('built-in/To Workspace',[sys,'/','To Workspace1'])
set_param([sys,'/','To Workspace1'],...
		'orientation',3,...
		'mat-name','u',...
		'buffer','1000000',...
		'position',[165,40,215,60])

add_block('built-in/Sum',[sys,'/','Sum3'])
set_param([sys,'/','Sum3'],...
		'orientation',1,...
		'inputs','+-',...
		'position',[515,105,535,125])

add_block('built-in/Sum',[sys,'/','Sum2'])
set_param([sys,'/','Sum2'],...
		'inputs','+++',...
		'position',[135,67,155,103])

add_block('built-in/To Workspace',[sys,'/','To Workspace3'])
set_param([sys,'/','To Workspace3'],...
		'orientation',1,...
		'mat-name','ey',...
		'buffer','1000000',...
		'position',[445,280,495,300])

add_block('built-in/State-Space',[sys,'/','State-Space1'])
set_param([sys,'/','State-Space1'],...
		'orientation',2,...
		'A','Hhat',...
		'B','Dhat',...
		'C','eye(n-p)',...
		'D','zeros(n-p,p)',...
		'X0','z0',...
		'position',[425,150,505,190])

add_block('built-in/Mux',[sys,'/','Mux'])
set_param([sys,'/','Mux'],...
		'orientation',2,...
		'inputs','2',...
		'position',[325,171,350,209])

add_block('built-in/To Workspace',[sys,'/','To Workspace5'])
set_param([sys,'/','To Workspace5'],...
		'orientation',3,...
		'mat-name','xc',...
		'buffer','1000000',...
		'position',[370,130,420,150])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain2']])
set_param([sys,'/',['Matrix',13,'Gain2']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain2']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','S\/',...
		'position',[255,175,285,205])

add_block('built-in/To Workspace',[sys,'/','To Workspace'])
set_param([sys,'/','To Workspace'],...
		'orientation',2,...
		'mat-name','s',...
		'buffer','1000000',...
		'position',[145,125,195,145])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain9']])
set_param([sys,'/',['Matrix',13,'Gain9']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain9']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','-rho*inv(Lam)\/',...
		'position',[75,175,105,205])

add_block('built-in/MATLAB Fcn',[sys,'/','Unv'])
set_param([sys,'/','Unv'],...
		'orientation',2,...
		'MATLAB Fcn','u/(norm(u)+delta)',...
		'Mask Display','UnV',...
		'Mask Type','unit vector',...
		'Mask Dialogue','Unit Vector|delta',...
		'Mask Translate','delta=@1;')
set_param([sys,'/','Unv'],...
		'Mask Entries','0.01\/',...
		'position',[125,175,165,205])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain10']])
set_param([sys,'/',['Matrix',13,'Gain10']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain10']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','P\/',...
		'position',[190,175,220,205])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain3']])
set_param([sys,'/',['Matrix',13,'Gain3']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain3']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','L\/',...
		'position',[165,245,195,275])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain4']])
set_param([sys,'/',['Matrix',13,'Gain4']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain4']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','T''\/',...
		'position',[385,195,415,225])

add_block('built-in/To Workspace',[sys,'/','To Workspace7'])
set_param([sys,'/','To Workspace7'],...
		'orientation',2,...
		'mat-name','uf',...
		'buffer','1000000',...
		'position',[30,40,80,60])

add_block('built-in/Sum',[sys,'/','Sum 2'])
set_param([sys,'/','Sum 2'],...
		'orientation',2,...
		'position',[545,2,565,33])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain5']])
set_param([sys,'/',['Matrix',13,'Gain5']],...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:',...
		'Mask Translate','K = @1;')
set_param([sys,'/',['Matrix',13,'Gain5']],...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','C\/',...
		'position',[400,70,430,100])

add_block('built-in/State-Space',[sys,'/','State-Space'])
set_param([sys,'/','State-Space'],...
		'A','A',...
		'B','B',...
		'C','eye(n)',...
		'D','zeros(n,m)',...
		'X0','x0',...
		'position',[260,64,335,106])

add_block('built-in/To Workspace',[sys,'/','To Workspace4'])
set_param([sys,'/','To Workspace4'],...
		'orientation',3,...
		'mat-name','x',...
		'buffer','1000000',...
		'position',[340,25,390,45])

add_block('built-in/Step Fcn',[sys,'/','Step Input'])
set_param([sys,'/','Step Input'],...
		'orientation',2,...
		'Time','0',...
		'After','0',...
		'position',[855,160,875,180])

add_block('built-in/State-Space',[sys,'/','State-Space2'])
set_param([sys,'/','State-Space2'],...
		'orientation',2,...
		'A','Am',...
		'B','Bm',...
		'C','eye(n)',...
		'D','zeros(n,m)',...
		'position',[675,115,755,155])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain7']])
set_param([sys,'/',['Matrix',13,'Gain7']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain7']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','Lr\/',...
		'position',[695,10,725,40])

add_block('built-in/Step Fcn',[sys,'/','Step Input1'])
set_param([sys,'/','Step Input1'],...
		'orientation',2,...
		'Time','0',...
		'After','0.25',...
		'position',[860,115,880,135])

add_block('built-in/To Workspace',[sys,'/','To Workspace8'])
set_param([sys,'/','To Workspace8'],...
		'orientation',3,...
		'mat-name','y',...
		'buffer','1000000',...
		'position',[435,45,485,65])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain8']])
set_param([sys,'/',['Matrix',13,'Gain8']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain8']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','Lx\/',...
		'position',[610,30,640,60])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain6']])
set_param([sys,'/',['Matrix',13,'Gain6']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain6']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','C\/',...
		'position',[590,120,620,150])

add_block('built-in/To Workspace',[sys,'/','To Workspace9'])
set_param([sys,'/','To Workspace9'],...
		'orientation',1,...
		'mat-name','xm',...
		'buffer','1000000',...
		'position',[625,180,675,200])

add_block('built-in/To Workspace',[sys,'/','To Workspace6'])
set_param([sys,'/','To Workspace6'],...
		'orientation',1,...
		'mat-name','ym',...
		'buffer','1000000',...
		'position',[550,215,600,235])

add_block('built-in/Clock',[sys,'/','Clock1'])
set_param([sys,'/','Clock1'],...
		'position',[630,240,650,260])

add_block('built-in/To Workspace',[sys,'/','To Workspace2'])
set_param([sys,'/','To Workspace2'],...
		'mat-name','t',...
		'buffer','1000000',...
		'position',[755,240,805,260])

add_block('built-in/Mux',[sys,'/','Mux1'])
set_param([sys,'/','Mux1'],...
		'orientation',2,...
		'inputs','2',...
		'position',[790,115,820,155])
add_line(sys,[340,85;395,85])
add_line(sys,[655,250;750,250])
add_line(sys,[160,85;255,85])
add_line(sys,[190,85;190,65])
add_line(sys,[160,260;40,260;40,85;130,85])
add_line(sys,[670,135;625,135])
add_line(sys,[435,85;520,85;520,100])
add_line(sys,[585,135;575,135;575,85;530,85;530,100])
add_line(sys,[525,130;525,210;420,210])
add_line(sys,[540,20;115,20;115,75;130,75])
add_line(sys,[120,190;110,190])
add_line(sys,[70,190;60,190;60,95;130,95])
add_line(sys,[575,135;575,210])
add_line(sys,[855,125;825,125])
add_line(sys,[525,170;510,170])
add_line(sys,[470,210;470,275])
add_line(sys,[320,190;290,190])
add_line(sys,[380,210;370,210;370,200;355,200])
add_line(sys,[420,170;370,170;370,180;355,180])
add_line(sys,[395,170;395,155])
add_line(sys,[312,190;312,260;200,260])
add_line(sys,[250,190;237,190;237,135;200,135])
add_line(sys,[237,190;225,190])
add_line(sys,[185,190;170,190])
add_line(sys,[115,50;85,50])
add_line(sys,[785,135;760,135])
add_line(sys,[850,170;835,170;825,145])
add_line(sys,[690,25;625,25;625,10;570,10])
add_line(sys,[365,85;365,50])
add_line(sys,[460,85;460,70])
add_line(sys,[605,45;595,45;595,25;570,25])
add_line(sys,[658,135;658,45;645,45])
add_line(sys,[650,135;650,175])
add_line(sys,[773,135;773,25;730,25])

drawnow

% Return any arguments.
if (nargin | nargout)
	% Must use feval here to access system in memory
	if (nargin > 3)
		if (flag == 0)
			eval(['[ret,x0,str,ts,xts]=',sys,'(t,x,u,flag);'])
		else
			eval(['ret =', sys,'(t,x,u,flag);'])
		end
	else
		[ret,x0,str,ts,xts] = feval(sys);
	end
else
	drawnow % Flash up the model and execute load callback
end
