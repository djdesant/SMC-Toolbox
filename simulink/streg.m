function [ret,x0,str,ts,xts]=streg(t,x,u,flag);
%STREG	is the M-file description of the SIMULINK system named STREG.
%	The block-diagram can be displayed by typing: STREG.
%
%	SYS=STREG(T,X,U,FLAG) returns depending on FLAG certain
%	system values given time point, T, current state vector, X,
%	and input vector, U.
%	FLAG is used to indicate the type of output to be returned in SYS.
%
%	Setting FLAG=1 causes STREG to return state derivatives, FLAG=2
%	discrete states, FLAG=3 system outputs and FLAG=4 next sample
%	time. For more information and other options see SFUNC.
%
%	Calling STREG with a FLAG of zero:
%	[SIZES]=STREG([],[],[],0),  returns a vector, SIZES, which
%	contains the sizes of the state vector and other parameters.
%		SIZES(1) number of states
%		SIZES(2) number of discrete states
%		SIZES(3) number of outputs
%		SIZES(4) number of inputs
%		SIZES(5) number of roots (currently unsupported)
%		SIZES(6) direct feedthrough flag
%		SIZES(7) number of sample times
%
%	For the definition of other parameters in SIZES, see SFUNC.
%	See also, TRIM, LINMOD, LINSIM, EULER, RK23, RK45, ADAMS, GEAR.

% Note: This M-file is only used for saving graphical information;
%       after the model is loaded into memory an internal model
%       representation is used.

% the system will take on the name of this mfile:
sys = mfilename;
new_system(sys)
simver(1.3)
if (0 == (nargin + nargout))
     set_param(sys,'Location',[314,272,759,629])
     open_system(sys)
end;
set_param(sys,'algorithm',     'RK-45')
set_param(sys,'Start time',    '0.0')
set_param(sys,'Stop time',     '5')
set_param(sys,'Min step size', '0.001')
set_param(sys,'Max step size', '0.1')
set_param(sys,'Relative error','1e-3')
set_param(sys,'Return vars',   '')

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain2']])
set_param([sys,'/',['Matrix',13,'Gain2']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain2']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','S\/',...
		'position',[255,175,285,205])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain9']])
set_param([sys,'/',['Matrix',13,'Gain9']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain9']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','-rho*inv(Lam)\/',...
		'position',[75,175,105,205])

add_block('built-in/MATLAB Fcn',[sys,'/','Unv'])
set_param([sys,'/','Unv'],...
		'orientation',2,...
		'MATLAB Fcn','u/(norm(u)+delta)',...
		'Mask Display','UnV',...
		'Mask Type','unit vector',...
		'Mask Dialogue','Unit Vector|delta',...
		'Mask Translate','delta=@1;')
set_param([sys,'/','Unv'],...
		'Mask Entries','0.001\/',...
		'position',[125,175,165,205])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain10']])
set_param([sys,'/',['Matrix',13,'Gain10']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain10']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','P\/',...
		'position',[190,175,220,205])

add_block('built-in/Sum',[sys,'/','Sum'])
set_param([sys,'/','Sum'],...
		'position',[80,69,100,96])

add_block('built-in/To Workspace',[sys,'/','To Workspace1'])
set_param([sys,'/','To Workspace1'],...
		'orientation',2,...
		'mat-name','u',...
		'buffer','1000000',...
		'position',[70,20,120,40])

add_block('built-in/Clock',[sys,'/','Clock1'])
set_param([sys,'/','Clock1'],...
		'position',[190,10,210,30])

add_block('built-in/To Workspace',[sys,'/','To Workspace2'])
set_param([sys,'/','To Workspace2'],...
		'mat-name','t',...
		'buffer','1000000',...
		'position',[270,10,320,30])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain3']])
set_param([sys,'/',['Matrix',13,'Gain3']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain3']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','L\/',...
		'position',[90,245,120,275])

add_block('built-in/State-Space',[sys,'/',['Matrix',13,'Gain4']])
set_param([sys,'/',['Matrix',13,'Gain4']],...
		'orientation',2,...
		'A','[]',...
		'B','[]',...
		'C','[]',...
		'D','K',...
		'Mask Display','K',...
		'Mask Type','Matrix Gain',...
		'Mask Dialogue','Matrix Gain.|Gain matrix:')
set_param([sys,'/',['Matrix',13,'Gain4']],...
		'Mask Translate','K = @1;',...
		'Mask Help','Multiplies input vector by entered matrix to produce output vector (y=Au).',...
		'Mask Entries','Cf\/',...
		'position',[265,280,295,310])

add_block('built-in/To Workspace',[sys,'/','To Workspace8'])
set_param([sys,'/','To Workspace8'],...
		'orientation',2,...
		'mat-name','y',...
		'buffer','1000000',...
		'position',[175,285,225,305])

add_block('built-in/To Workspace',[sys,'/','To Workspace'])
set_param([sys,'/','To Workspace'],...
		'orientation',2,...
		'mat-name','s',...
		'buffer','1000000',...
		'position',[155,130,205,150])

add_block('built-in/State-Space',[sys,'/','State-Space'])
set_param([sys,'/','State-Space'],...
		'A','Af',...
		'B','Bf',...
		'C','eye(n)',...
		'D','zeros(n,m)',...
		'X0','x0',...
		'position',[185,64,260,106])

add_block('built-in/To Workspace',[sys,'/','To Workspace3'])
set_param([sys,'/','To Workspace3'],...
		'mat-name','x',...
		'buffer','1000000',...
		'position',[365,130,415,150])
add_line(sys,[215,20;265,20])
add_line(sys,[120,190;110,190])
add_line(sys,[250,190;237,190;237,140;210,140])
add_line(sys,[237,190;225,190])
add_line(sys,[185,190;170,190])
add_line(sys,[85,260;40,260;40,75;75,75])
add_line(sys,[70,190;60,190;60,90;75,90])
add_line(sys,[105,85;180,85])
add_line(sys,[265,85;325,85;325,260;125,260])
add_line(sys,[325,190;290,190])
add_line(sys,[156,85;156,30;125,30])
add_line(sys,[260,295;230,295])
add_line(sys,[316,260;316,295;300,295])
add_line(sys,[325,140;360,140])

drawnow

% Return any arguments.
if (nargin | nargout)
	% Must use feval here to access system in memory
	if (nargin > 3)
		if (flag == 0)
			eval(['[ret,x0,str,ts,xts]=',sys,'(t,x,u,flag);'])
		else
			eval(['ret =', sys,'(t,x,u,flag);'])
		end
	else
		[ret,x0,str,ts,xts] = feval(sys);
	end
else
	drawnow % Flash up the model and execute load callback
end
